QUERY CON GROUP BY

1. Contare quanti iscritti ci sono stati ogni anno

SELECT COUNT(enrolment_date) AS 'Numero iscritti per anno', YEAR(enrolment_date) AS 'Anno' FROM students
GROUP BY YEAR(enrolment_date);


2. Contare gli insegnanti che hanno l'ufficio nello stesso edificio

SELECT COUNT(id) AS 'Numero insegnanti', office_address FROM teachers
GROUP BY office_address;


3. Calcolare la media dei voti di ogni appello d'esame

SELECT AVG(vote) AS 'Media voti', exam_id FROM exam_student
GROUP BY exam_id;


4- Contare quanti corsi di laurea ci sono per ogni dipartimento

SELECT COUNT(courses.id) as 'Numero corsi', departments.name AS 'Dipartimento' FROM courses
JOIN degrees ON courses.degree_id = degrees.id
JOIN departments ON degrees.department_id = departments.id
GROUP BY departments.name
ORDER BY COUNT(courses.id) DESC;


QUERY CON JOIN

1. Selezionare tutti gli studenti iscritti al Corso di Laurea in Economia

SELECT students.id, students.name, students.surname, students.registration_number, degrees.name FROM students
JOIN degrees ON students.degree_id = degrees.id
WHERE degrees.name LIKE 'Corso di Laurea in Economia';


2. Selezionare tutti i Corsi di Laurea Magistrale del Dipartimento di Neuroscienze

SELECT courses.id, courses.name, courses.description,
courses.period, courses.year, courses.cfu, departments.name FROM courses
JOIN degrees ON courses.degree_id = degrees.id
JOIN departments ON degrees.department_id = departments. id
WHERE degrees.level = 'magistrale' AND departments.name = 'Dipartimento di Neuroscienze';


3. Selezionare tutti i corsi in cui insegna Fulvio Amato (id=44)

SELECT courses.id AS 'Codice corso' , courses.name AS 'Nome corso', teachers.name, teachers.surname FROM courses
JOIN course_teacher ON courses.id = course_teacher.course_id
JOIN teachers ON course_teacher.teacher_id = teachers.id
WHERE teachers.id = 44
ORDER BY courses.id;


4. Selezionare tutti gli studenti con i dati relativi al corso di laurea a cui sono iscritti e il
relativo dipartimento, in ordine alfabetico per cognome e nome

SELECT students.name, students.surname, students.registration_number, 
degrees.name AS 'Laurea', departments.name AS 'Dipartimento' FROM students
JOIN degrees ON students.degree_id = degrees.id
JOIN departments ON degrees.department_id = departments.id
ORDER BY students.name, students.surname;


5.Selezionare tutti i corsi di laurea con i relativi corsi e insegnanti

SELECT degrees.name AS 'Corso laurea', courses.name AS 'Insegnamenti', teachers.surname AS 'Insegnante' FROM degrees
JOIN courses ON degrees.id = courses.degree_id
JOIN course_teacher ON courses.id = course_teacher.course_id
JOIN teachers ON course_teacher.teacher_id = teachers.id;


6. Selezionare tutti i docenti che insegnano nel Dipartimento di Matematica (54)

SELECT teachers.surname, teachers.name, departments.name FROM teachers
JOIN course_teacher ON teachers.id = course_teacher.teacher_id
JOIN courses ON course_teacher.course_id = courses.id
JOIN degrees ON courses.degree_id = degrees.id
JOIN departments ON degrees.department_id = departments.id
WHERE departments.name LIKE 'Dipartimento di Matematica'
GROUP BY teachers.surname, teachers.name, departments.name;


7. BONUS: Selezionare per ogni studente quanti tentativi dâ€™esame ha sostenuto per
superare ciascuno dei suoi esami

SELECT students.registration_number, students.surname, students.name,
exam_student.exam_id, COUNT(exam_student.exam_id) AS 'Numero tentativi esame' 
FROM students
JOIN exam_student ON students.id = exam_student.student_id
GROUP BY exam_student.exam_id, students.registration_number, students.surname, students.name
ORDER BY students.registration_number;

